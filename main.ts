namespace SpriteKind {
    export const Present = SpriteKind.create()
}
namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile1 = img`
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
`
    //% blockIdentity=images._tile
    export const tile2 = img`
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 2 2 5 2 5 2 5 2 5 2 2 2 5 5 
5 5 2 5 5 2 5 2 5 2 5 5 2 5 5 5 
5 5 2 2 5 5 2 5 5 2 5 5 2 5 5 5 
5 5 2 5 5 2 5 2 5 2 5 5 2 5 5 5 
5 5 2 2 5 2 5 2 5 2 5 5 2 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
`
    //% blockIdentity=images._tile
    export const tile3 = img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`
    //% blockIdentity=images._tile
    export const tile4 = img`
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
`
    //% blockIdentity=images._tile
    export const tile5 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 . . . . . . 
. . . . . . . 2 2 2 . . . . . . 
. . . . . a a a a a a a . . . . 
. . . . . a a a a a a a . . . . 
. . . . . a a a a a a a . . . . 
. . . . a a a a a a a a a . . . 
. . . . a a a a a a a a a . . . 
. . . . a a a a a a a a a . . . 
. . . . a a a a a a a a a . . . 
`
    //% blockIdentity=images._tile
    export const tile6 = img`
5 7 7 2 . 7 5 5 7 7 7 2 . 5 5 7 
2 7 7 5 5 5 7 2 7 7 7 7 5 7 7 2 
7 5 5 7 7 7 7 7 7 7 7 7 7 4 4 7 
5 2 4 4 4 4 4 4 7 7 4 2 2 7 7 7 
7 7 7 7 7 4 2 7 7 7 7 5 5 4 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 4 4 
2 7 7 2 2 5 7 7 7 7 7 7 7 5 5 5 
4 4 4 7 7 7 7 7 7 7 7 7 7 4 4 5 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 4 
5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 2 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
2 2 7 7 7 7 7 7 7 7 7 5 5 5 4 7 
7 7 7 7 7 7 7 2 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 5 2 2 7 7 7 7 7 7 5 5 2 2 
`
}
controller.B.onEvent(ControllerButtonEvent.Pressed, function () {
    Present2 = sprites.create(img`
9 9 2 9 9 
9 9 2 9 9 
2 2 2 2 2 
9 9 2 9 9 
9 9 2 9 9 
`, SpriteKind.Present)
    Present2.setPosition(Santa.x, Santa.y)
    Present2.ax = 100
})
scene.onOverlapTile(SpriteKind.Player, myTiles.tile6, function (sprite, location) {
    game.over(false)
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    if (Santa.vy == 0) {
        Santa.vy = -155
    }
})
scene.onHitWall(SpriteKind.Projectile, function (sprite) {
    sprite.destroy()
})
function Startlevel () {
    scene.cameraFollowSprite(Santa)
    info.setLife(3)
    Santa.ay += 350
    if (CurrentLevel == 0) {
        tiles.setTilemap(tiles.createTilemap(
            hex``,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . 2 2 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . 
. . . . . . 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`,
            [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6],
            TileScale.Sixteen
        ))
    } else if (CurrentLevel == 1) {
        tiles.setTilemap(tiles.createTilemap(
            hex``,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . 2 2 2 2 . . . . . . 2 2 
. . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . 
. . . . . . . . 2 . . . . . . . . . . . . . . . . . 2 2 2 2 . . . . . 2 . . . . . . . 2 2 2 2 . . . 
. . . . . . . . 2 . . . . . 2 2 2 2 2 2 . . . . . . . . . . . . 2 2 . 2 . . . . . . . . . . 2 . . . 
. . . . . . . . 2 . . . . . . . . . . 2 2 2 2 2 . . . . . . . . . . . 2 . . . . . . . . . . . . . . 
. . . . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6],
            TileScale.Sixteen
        ))
    } else if (CurrentLevel == 2) {
        tiles.setTilemap(tiles.createTilemap(
            hex`1b`,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 
. . . . . . . . . . . . . . . . . . . . . . . . 2 . . 
. . . . . . . . . . . . . . . . . . . . . . . . 2 . . 
. . . . . . . . . . . . . . . . . . . . . . . . 2 . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . 2 . . 
. . . . . 2 . . . . . . . . . . . . 2 2 2 2 . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . 2 2 2 2 2 2 2 2 2 . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 . . . . . . . . . 2 . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 . 
. . . . . . . . . . . . . . . . . 2 2 2 2 2 . . . 2 . 
. . . . . . . . . . . . . . . . . 2 . . . . . . . 2 . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 . 
. . . 2 2 2 . . . . . . . . . . . . . . . . . . . 2 . 
. . . 2 . 2 . . . . . . . . . . . . . . . . . . . 2 . 
. . . 2 . 2 . . . . . . . . . . . . . . . . . . . 2 . 
. . . 2 . 2 . . . . . . . . . . . . . . . . . . . 2 . 
2 2 2 2 . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . . . 2 2 2 2 2 2 2 . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 2 . . 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . 
2 2 2 2 2 . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 . . . . . . . . . . . . . 
. . . . . . 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6],
            TileScale.Sixteen
        ))
    } else {
        game.over(true)
    }
    tiles.placeOnRandomTile(Santa, myTiles.tile4)
    for (let value of tiles.getTilesByType(myTiles.tile4)) {
        tiles.setTileAt(value, myTiles.tile0)
    }
}
scene.onOverlapTile(SpriteKind.Player, myTiles.tile2, function (sprite, location) {
    CurrentLevel += 1
    Startlevel()
})
sprites.onOverlap(SpriteKind.Present, SpriteKind.Enemy, function (sprite, otherSprite) {
    sprite.destroy()
    otherSprite.destroy()
    info.changeScoreBy(1)
})
let Present2: Sprite = null
let Santa: Sprite = null
let CurrentLevel = 0
CurrentLevel = 0
Santa = sprites.create(img`
. . . . 2 2 2 2 2 2 . . . . . . 
. . . . 2 f 2 2 f 2 . . . . . . 
. . . . 1 1 1 1 1 1 . . . . . . 
. . . . 1 1 1 1 1 1 . . . . . . 
. . 2 2 2 1 1 1 1 1 . . . . . . 
. . . . 2 2 2 2 1 1 . . . . . . 
. . . . 2 2 2 2 2 . . . . . . . 
. . . . 2 2 2 2 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Player)
controller.moveSprite(Santa, 100, 0)
Santa.setFlag(SpriteFlag.BounceOnWall, false)
Startlevel()
game.onUpdate(function () {
    // Basic Santa sprite (walking/standing)
    Santa.setImage(img`
. . . . 2 2 2 2 2 2 . . . . . . 
. . . . 2 f 2 2 f 2 . . . . . . 
. . . . 1 1 1 1 1 1 . . . . . . 
. . . . 1 1 1 1 1 1 . . . . . . 
. . 2 2 2 1 1 1 1 1 . . . . . . 
. . . . 2 2 2 2 1 1 . . . . . . 
. . . . 2 2 2 2 2 . . . . . . . 
. . . . 2 2 2 2 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
    if (Santa.vy < 0) {
        // Santa jumping sprite image below
        Santa.setImage(img`
. . . . 2 2 2 2 2 2 . . . . . . 
. . . . 2 f 2 2 f 2 . . . . . . 
. . . . 1 1 1 1 1 1 . 3 3 3 . . 
. . . . 1 1 1 1 1 1 . 3 3 3 . . 
. 3 3 3 2 1 1 1 1 1 . 3 3 3 . . 
3 3 3 3 2 2 2 2 1 1 . 3 3 3 . . 
3 3 3 3 2 2 2 2 2 3 3 3 3 3 . . 
3 3 . . 2 2 2 2 2 3 3 3 3 3 . . 
3 3 . . 2 . . . 2 3 3 3 3 . . . 
3 3 3 . 2 . . . 2 . . . . . . . 
3 3 3 . 2 . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
    } else if (Santa.x % 2 == 0) {
        // Basic Santa sprite (walking/standing)
        Santa.setImage(img`
. . . . 2 2 2 2 2 2 . . . . . . 
. . . . 2 f 2 2 f 2 . . . . . . 
. . . . 1 1 1 1 1 1 . . . . . . 
. . . . 1 1 1 1 1 1 . . . . . . 
. . 2 2 2 1 1 1 1 1 . . . . . . 
. . . . 2 2 2 2 1 1 . . . . . . 
. . . . 2 2 2 2 2 . . . . . . . 
. . . . 2 2 2 2 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . . 2 . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . . 2 . . . . . . . 
. . . 2 . . . 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
    } else {
    	
    }
    if (Santa.isHittingTile(CollisionDirection.Left) || Santa.isHittingTile(CollisionDirection.Right)) {
        Santa.vy = 0
        Santa.ay = 0
        // Santa climbing sprite image below
        Santa.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 1 1 . . . . . . . . . . 
. . . . 2 1 . 2 . . . . . . . . 
. . . . 2 2 2 1 . . . . . . . . 
. . . 1 1 2 1 . . . . . . . . . 
. . . 1 1 2 . . . . . . . . . . 
. . . 1 2 2 . 2 2 . . . . . . . 
. . . 1 2 2 2 1 1 . . . . . . . 
. . . 1 2 2 1 1 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
    } else {
        Santa.ay = 350
    }
    if (Santa.vx < 0 || Santa.isHittingTile(CollisionDirection.Left)) {
        Santa.image.flipX()
        Santa.setImage(Santa.image)
    }
})
